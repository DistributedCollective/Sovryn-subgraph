specVersion: 0.0.2
description: Sovryn official subgraph
repository: https://github.com/DistributedCollective/Sovryn-subgraph
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: Settlement
    network: {{network}}
    source:
      address: '{{Settlement.address}}'
      abi: Settlement
      startBlock: {{Settlement.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Deposit
        - MarginOrderCanceled
        - MarginOrderFilled
        - OrderCanceled
        - OrderFilled
        - Withdrawal
      abis:
        - name: Settlement
          file: ./abis/Settlement.json
      eventHandlers:
        - event: Deposit(address,uint256)
          handler: handleDeposit
        - event: MarginOrderCanceled(indexed bytes32,indexed address)
          handler: handleMarginOrderCanceled
        - event: MarginOrderFilled(indexed bytes32,indexed address,uint256,uint256,uint256,address,uint256,uint256,address,uint256)
          handler: handleMarginOrderFilled
        - event: OrderCanceled(indexed bytes32,indexed address)
          handler: handleOrderCanceled
        - event: OrderFilled(indexed bytes32,indexed address,uint256,uint256,address[],uint256)
          handler: handleOrderFilled
        - event: Withdrawal(address,uint256)
          handler: handleWithdrawal
      file: ./src/Settlement.ts

  # Converter Factory
  - kind: ethereum/contract
    name: ConverterFactory
    network: {{network}}
    source:
      address: '{{ConverterFactory.address}}'
      abi: ConverterFactory
      startBlock: {{ConverterFactory.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - NewConverter
        - LiquidityPool
      abis:
        - name: ConverterFactory
          file: ./abis/ConverterFactory.json
        - name: LiquidityPoolV1Converter
          file: ./abis/LiquidityPoolV1Converter.json
        - name: LiquidityPoolV2Converter
          file: ./abis/LiquidityPoolV2Converter.json
        - name: LiquidityPoolV1ConverterProtocolFee
          file: ./abis/LiquidityPoolV1ConverterProtocolFee.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: NewConverter(indexed uint16,indexed address,indexed address)
          handler: handleNewConverter
      file: ./src/ConverterFactory.ts

  #Converter Registry
  - kind: ethereum/contract
    name: ConverterRegistry
    network: {{network}}
    source:
      address: '{{ConverterRegistry.address}}'
      abi: ConverterRegistry
      startBlock: {{ConverterRegistry.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - SmartTokenAdded
        - LiquidityPool
        - SmartToken
      abis:
        - name: ConverterRegistry
          file: ./abis/ConverterRegistry.json
        - name: SmartToken
          file: ./abis/SmartToken.json
        - name: LiquidityPoolV1Converter
          file: ./abis/LiquidityPoolV1Converter.json
        - name: LiquidityPoolV2Converter
          file: ./abis/LiquidityPoolV2Converter.json
        - name: LiquidityPoolV1ConverterProtocolFee
          file: ./abis/LiquidityPoolV1ConverterProtocolFee.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: SmartTokenAdded(indexed address)
          handler: handleSmartTokenAdded
        - event: SmartTokenRemoved(indexed address)
          handler: handleSmartTokenRemoved
      file: ./src/ConverterRegistry.ts

  # ISovryn
  - kind: ethereum/contract
    name: ISovryn
    network: {{network}}
    source:
      address: '{{ISovryn.address}}'
      abi: ISovryn
      startBlock: {{ISovryn.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Borrow
        - CloseWithDeposit
        - CloseWithSwap
        - DepositCollateral
        - EarnReward
        - ExternalSwap
        - Liquidate
        - LoanSwap
        - PayBorrowingFee
        - PayLendingFee
        - PayTradingFee
        - Trade
        - Rollover
        # - WithdrawFees # this needs to be changed due to naming clash
      abis:
        - name: ISovryn
          file: ./abis/ISovryn.json
        - name: LoanTokenLogicStandard
          file: ./abis/LoanTokenLogicStandard.json
      eventHandlers:
        - event: Borrow(indexed address,indexed address,indexed bytes32,address,address,uint256,uint256,uint256,uint256,uint256,uint256)
          handler: handleBorrow
        - event: CloseWithDeposit(indexed address,indexed address,indexed bytes32,address,address,address,uint256,uint256,uint256,uint256)
          handler: handleCloseWithDeposit
        - event: CloseWithSwap(indexed address,indexed address,indexed bytes32,address,address,address,uint256,uint256,uint256,uint256)
          handler: handleCloseWithSwap
        - event: DepositCollateral(indexed bytes32,uint256,uint256)
          handler: handleDepositCollateral
        - event: EarnReward(indexed address,indexed address,indexed bytes32,uint256,uint256,uint256)
          handler: handleEarnReward
        - event: ExternalSwap(indexed address,indexed address,indexed address,uint256,uint256)
          handler: handleExternalSwap
        - event: Liquidate(indexed address,indexed address,indexed bytes32,address,address,address,uint256,uint256,uint256,uint256)
          handler: handleLiquidate
        - event: PayBorrowingFee(indexed address,indexed address,indexed bytes32,uint256)
          handler: handlePayBorrowingFee
        - event: PayLendingFee(indexed address,indexed address,uint256)
          handler: handlePayLendingFee
        - event: PayTradingFee(indexed address,indexed address,indexed bytes32,uint256)
          handler: handlePayTradingFee
        - event: SetLoanPool(indexed address,indexed address,indexed address)
          handler: handleSetLoanPool
        - event: Trade(indexed address,indexed address,indexed bytes32,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256)
          handler: handleTrade
        - event: Rollover(indexed address,indexed address,indexed bytes32,uint256,uint256,uint256,address,uint256)
          handler: handleRollover
      file: ./src/ISovryn.ts
  
  - kind: ethereum/contract
    name: DepositCollateralLegacy
    network: {{network}}
    source: 
      address: '{{ISovryn.address}}'
      abi: DepositCollateralLegacy
      startBlock: {{ISovryn.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - DepositCollateral
      abis: 
        - name: DepositCollateralLegacy
          file: ./abis/DepositCollateralLegacy.json
      eventHandlers:
        - event: DepositCollateral(bytes32,uint256)
          handler: handleDepositCollateralLegacy
      file: ./src/ISovryn.ts

  - kind: ethereum/contract
    name: DepositCollateralNonIndexed
    network: {{network}}
    source: 
      address: '{{ISovryn.address}}'
      abi: DepositCollateralNonIndexed
      startBlock: {{ISovryn.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - DepositCollateral
      abis: 
        - name: DepositCollateralNonIndexed
          file: ./abis/DepositCollateralNonIndexed.json
      eventHandlers:
        - event: DepositCollateral(bytes32,uint256,uint256)
          handler: handleDepositCollateralNonIndexed
      file: ./src/ISovryn.ts

  - kind: ethereum/contract
    name: GovernorAlphaEvents
    network: {{network}}
    source:
      address: '{{GovernorAlphaEvents.address}}'
      abi: GovernorAlphaEvents
      startBlock: {{GovernorAlphaEvents.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - ProposalCanceled
        - ProposalCreated
        - ProposalExecuted
        - ProposalQueued
        - VoteCast
      abis:
        - name: GovernorAlphaEvents
          file: ./abis/GovernorAlphaEvents.json
      eventHandlers:
        - event: ProposalCanceled(uint256)
          handler: handleProposalCanceled
        - event: ProposalCreated(uint256,address,address[],uint256[],string[],bytes[],uint256,uint256,string)
          handler: handleProposalCreated
        - event: ProposalExecuted(uint256)
          handler: handleProposalExecuted
        - event: ProposalQueued(uint256,uint256)
          handler: handleProposalQueued
        - event: VoteCast(address,uint256,bool,uint256)
          handler: handleVoteCast
      file: ./src/GovernorEvents.ts

  # 3 Vesting Registries (same abi). We need to add FISH here
  - kind: ethereum/contract
    name: VestingRegistry1
    network: {{network}}
    source:
      address: '{{VestingRegistry1.address}}'
      abi: VestingRegistry
      startBlock: {{VestingRegistry1.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - AdminAdded
        - AdminRemoved
        - CSOVReImburse
        - CSOVTokensExchanged
        - OwnershipTransferred
        - SOVTransferred
        - TeamVestingCreated
        - TokensStaked
        - VestingCreated
      abis:
        - name: VestingRegistry
          file: ./abis/VestingRegistry.json
      eventHandlers:
        - event: TeamVestingCreated(indexed address,address,uint256,uint256,uint256)
          handler: handleTeamVestingCreated
        - event: VestingCreated(indexed address,address,uint256,uint256,uint256)
          handler: handleVestingCreated
      file: ./src/VestingRegistry.ts

  - kind: ethereum/contract
    name: VestingRegistry2
    network: {{network}}
    source:
      address: '{{VestingRegistry2.address}}'
      abi: VestingRegistry
      startBlock: {{VestingRegistry2.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - AdminAdded
        - AdminRemoved
        - CSOVReImburse
        - CSOVTokensExchanged
        - OwnershipTransferred
        - SOVTransferred
        - TeamVestingCreated
        - TokensStaked
        - VestingCreated
      abis:
        - name: VestingRegistry
          file: ./abis/VestingRegistry.json
      eventHandlers:
        - event: TeamVestingCreated(indexed address,address,uint256,uint256,uint256)
          handler: handleTeamVestingCreated
        - event: VestingCreated(indexed address,address,uint256,uint256,uint256)
          handler: handleVestingCreated
      file: ./src/VestingRegistry.ts

  - kind: ethereum/contract
    name: VestingRegistry3
    network: {{network}}
    source:
      address: '{{VestingRegistry3.address}}'
      abi: VestingRegistry
      startBlock: {{VestingRegistry3.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - AdminAdded
        - AdminRemoved
        - CSOVReImburse
        - CSOVTokensExchanged
        - OwnershipTransferred
        - SOVTransferred
        - TeamVestingCreated
        - TokensStaked
        - VestingCreated
      abis:
        - name: VestingRegistry
          file: ./abis/VestingRegistry.json
      eventHandlers:
        - event: TeamVestingCreated(indexed address,address,uint256,uint256,uint256)
          handler: handleTeamVestingCreated
        - event: VestingCreated(indexed address,address,uint256,uint256,uint256)
          handler: handleVestingCreated
      file: ./src/VestingRegistry.ts

  - kind: ethereum/contract
    name: VestingRegistryProxy
    network: {{network}}
    source:
      address: '{{VestingRegistryProxy.address}}'
      abi: VestingProxy
      startBlock: {{VestingRegistryProxy.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - TeamVestingCreated
        - TokensStaked
        - VestingCreated
      abis:
        - name: VestingProxy
          file: ./abis/VestingProxy.json
      eventHandlers:
        - event: TeamVestingCreated(indexed address,address,uint256,uint256,uint256,uint256)
          handler: handleTeamVestingCreatedProxy
        - event: VestingCreated(indexed address,address,uint256,uint256,uint256,uint256)
          handler: handleVestingCreatedProxy
      file: ./src/VestingRegistry.ts

  - kind: ethereum/contract
    name: VestingRegistryFish
    network: {{network}}
    source:
      address: '{{VestingRegistryFish.address}}'
      abi: VestingRegistry
      startBlock: {{VestingRegistryFish.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - AdminAdded
        - AdminRemoved
        - CSOVReImburse
        - CSOVTokensExchanged
        - OwnershipTransferred
        - SOVTransferred
        - TeamVestingCreated
        - TokensStaked
        - VestingCreated
      abis:
        - name: VestingRegistry
          file: ./abis/VestingRegistry.json
      eventHandlers:
        - event: TeamVestingCreated(indexed address,address,uint256,uint256,uint256)
          handler: handleTeamVestingCreated
        - event: VestingCreated(indexed address,address,uint256,uint256,uint256)
          handler: handleVestingCreated
      file: ./src/VestingRegistry.ts

  # Four Year Vesting
  - kind: ethereum/contract
    name: FourYearVesting
    network: {{network}}
    source:
      address: '{{FourYearVesting.address}}'
      abi: FourYearVesting
      startBlock: {{FourYearVesting.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - FourYearVestingCreated
      abis:
        - name: FourYearVesting
          file: ./abis/FourYearVesting.json
      eventHandlers:
        - event: FourYearVestingCreated(indexed address,indexed address)
          handler: handleFourYearVestingCreated
      file: ./src/FourYearVesting.ts

  # Staking
  - kind: ethereum/contract
    name: Staking
    network: {{network}}
    source:
      address: '{{Staking.address}}'
      abi: Staking
      startBlock: {{Staking.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - DelegateChanged
        - DelegateStakeChanged
        - ExtendedStakingDuration
        - OwnershipTransferred
        - TokensStaked
        - TokensUnlocked
        - TokensWithdrawn
        - VestingTokensWithdrawn
        - StakingWithdrawn
      abis:
        - name: Staking
          file: ./abis/Staking.json
      eventHandlers:
        - event: DelegateChanged(indexed address,uint256,indexed address,indexed address)
          handler: handleDelegateChanged
        - event: ExtendedStakingDuration(indexed address,uint256,uint256)
          handler: handleExtendedStakingDuration
        - event: TokensStaked(indexed address,uint256,uint256,uint256)
          handler: handleTokensStaked
        - event: TokensWithdrawn(indexed address,address,uint256)
          handler: handleTokensWithdrawn
        - event: StakingWithdrawn(indexed address,uint256,uint256,indexed address,bool)
          handler: handleStakingWithdrawn
      file: ./src/Staking.ts

  - kind: ethereum/contract
    name: StakingFish
    network: {{network}}
    source:
      address: '{{StakingFish.address}}'
      abi: Staking
      startBlock: {{StakingFish.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - TokensWithdrawn
        - StakingWithdrawn
      abis:
        - name: Staking
          file: ./abis/Staking.json
      eventHandlers:
        - event: TokensStaked(indexed address,uint256,uint256,uint256)
          handler: handleTokensStaked
        - event: TokensWithdrawn(indexed address,address,uint256)
          handler: handleTokensWithdrawn
        - event: StakingWithdrawn(indexed address,uint256,uint256,indexed address,bool)
          handler: handleStakingWithdrawn
      file: ./src/StakingFish.ts
   
  #  FeeSharingProxy contract
  - kind: ethereum/contract
    name: FeeSharingProxy
    network: {{network}}
    source:
      address: '{{FeeSharingProxy.address}}'
      abi: FeeSharingProxy
      startBlock: {{FeeSharingProxy.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - StakeHistoryItem
      abis:
        - name: FeeSharingProxy
          file: ./abis/FeeSharingProxy.json
      eventHandlers:
        - event: TokensTransferred(indexed address,indexed address,uint256)
          handler: handleTokensTransferred
        - event: UserFeeWithdrawn(indexed address,indexed address,indexed address,uint256)
          handler: handleUserFeeWithdrawn
      file: ./src/FeeSharingProxy.ts

  # LockedSov
  - kind: ethereum/contract
    name: LockedSov
    network: {{network}}
    source:
      address: '{{LockedSov.address}}'
      abi: LockedSov
      startBlock: {{LockedSov.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - UserRewardEarnedHistory
        - RewardsEarnedHistoryItem
      abis:
        - name: LockedSov
          file: ./abis/LockedSov.json
      eventHandlers:
        - event: TokenStaked(indexed address,indexed address,uint256)
          handler: handleTokenStaked
      file: ./src/LockedSov.ts

  # Mining Proxy
  - kind: ethereum/contract
    name: MiningProxy
    network: {{network}}
    source:
      address: '{{MiningProxy.address}}'
      abi: MiningProxy
      startBlock: {{MiningProxy.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - RewardClaimed
      abis:
        - name: MiningProxy
          file: ./abis/MiningProxy.json
      eventHandlers:
        - event: RewardClaimed(indexed address,indexed address,uint256)
          handler: handleRewardClaimed
        - event: PoolTokenAdded(indexed address,indexed address,uint256)
          handler: handlePoolTokenAdded
        - event: PoolTokenUpdated(indexed address,indexed address,uint256,uint256)
          handler: handlePoolTokenUpdated
      file: ./src/MiningProxy.ts

  # Staking Reward
  - kind: ethereum/contract
    name: StakingReward
    network: {{network}}
    source:
      address: '{{StakingReward.address}}'
      abi: StakingReward
      startBlock: {{StakingReward.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - OwnershipTransferred
        - RewardWithdrawn
      abis:
        - name: StakingReward
          file: ./abis/StakingReward.json
      eventHandlers:
        - event: RewardWithdrawn(indexed address,uint256)
          handler: handleRewardWithdrawn
      file: ./src/StakingReward.ts

  # rBTCWrapperProxy
  - kind: ethereum/contract
    name: rbtcWrapperProxyTokenConverted
    network: {{network}}
    source:
      address: '{{rbtcWrapperProxyTokenConverted.address}}'
      abi: rbtcWrapperProxyTokenConverted
      startBlock: {{rbtcWrapperProxyTokenConverted.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - TokenConverted
      abis:
        - name: rbtcWrapperProxyTokenConverted
          file: ./abis/rbtcWrapperProxyTokenConverted.json
      eventHandlers:
        - event: TokenConverted(indexed address,indexed uint256,indexed uint256,address[])
          handler: handleTokenConverted
      # blockHandlers:
      #   - handler: handleBlock
      file: ./src/rbtcWrapperProxyTokenConverted.ts

  - kind: ethereum/contract
    name: OrderbookTestnet
    network: {{network}}
    source:
      address: '{{OrderbookTestnet.address}}'
      abi: Orderbook
      startBlock: {{OrderbookTestnet.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - OrderCreated
      abis:
        - name: Orderbook
          file: ./abis/Orderbook.json
      eventHandlers:
        - event: OrderCreated(indexed bytes32,(address,address,address,uint256,uint256,address,uint256,uint256,uint8,bytes32,bytes32),uint256)
          handler: handleOrderCreated
      file: ./src/Orderbook.ts

  - kind: ethereum/contract
    name: OrderbookMainnet
    network: {{network}}
    source:
      address: '{{OrderbookMainnet.address}}'
      abi: Orderbook
      startBlock: {{OrderbookMainnet.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - OrderCreated
      abis:
        - name: Orderbook
          file: ./abis/Orderbook.json
      eventHandlers:
        - event: OrderCreated(indexed bytes32,(address,address,address,uint256,uint256,address,uint256,uint256,uint8,bytes32,bytes32),uint256)
          handler: handleOrderCreated
      file: ./src/Orderbook.ts

  - kind: ethereum/contract
    name: FastBTCBridge
    network: {{network}}
    source:
      address: '{{FastBTCBridge.address}}'
      abi: FastBTCBridge
      startBlock: {{FastBTCBridge.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - BitcoinTransferBatchSending
      abis:
        - name: FastBTCBridge
          file: ./abis/FastBTCBridge.json
      eventHandlers:
        - event: BitcoinTransferBatchSending(bytes32,uint8)
          handler: handleBitcoinTransferBatchSending
        - event: BitcoinTransferStatusUpdated(indexed bytes32,uint8)
          handler: handleBitcoinTransferStatusUpdated
        - event: NewBitcoinTransfer(indexed bytes32,string,uint256,uint256,uint256,indexed address)
          handler: handleNewBitcoinTransfer
      file: ./src/FastBTCBridge.ts

templates:
  # LiquidityPoolV1Converter
  - kind: ethereum/contract
    name: LiquidityPoolV1Converter
    network: {{network}}
    source:
      # address: '{{LiquidityPoolV1Converter.address}}'
      abi: LiquidityPoolV1Converter
      # startBlock: {{LiquidityPoolV1Converter.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Activation
        - Conversion
        - TokenRateUpdate
        - Token
        - SmartToken
        - PoolToken
      abis:
        - name: LiquidityPoolV1Converter
          file: ./abis/LiquidityPoolV1Converter.json
        - name: LiquidityPoolV1ConverterProtocolFee
          file: ./abis/LiquidityPoolV1ConverterProtocolFee.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: SmartToken
          file: ./abis/SmartToken.json
      eventHandlers:
        - event: LiquidityAdded(indexed address,indexed address,uint256,uint256,uint256)
          handler: handleLiquidityAdded
        - event: LiquidityRemoved(indexed address,indexed address,uint256,uint256,uint256)
          handler: handleLiquidityRemoved
        - event: Activation(indexed uint16,indexed address,indexed bool)
          handler: handleActivation
        - event: Conversion(indexed address,indexed address,indexed address,uint256,uint256,int256)
          handler: handleConversionV1
        - event: WithdrawFees(indexed address,indexed address,address,uint256,uint256)
          handler: handleWithdrawFees
      file: ./src/LiquidityPoolConverter.ts

  # LiquidityPoolV2Converter
  - kind: ethereum/contract
    name: LiquidityPoolV2Converter
    network: {{network}}
    source:
      # address: '{{LiquidityPoolV2Converter.address}}'
      abi: LiquidityPoolV2Converter
      # startBlock: {{LiquidityPoolV2Converter.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Activation
        - Conversion
        - Token
        - SmartToken
        - PoolToken
      abis:
        - name: LiquidityPoolV2Converter
          file: ./abis/LiquidityPoolV2Converter.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: SmartToken
          file: ./abis/SmartToken.json
      eventHandlers:
        - event: LiquidityAdded(indexed address,indexed address,uint256,uint256,uint256)
          handler: handleLiquidityAdded
        - event: LiquidityRemoved(indexed address,indexed address,uint256,uint256,uint256)
          handler: handleLiquidityRemoved
        - event: Activation(indexed uint16,indexed address,indexed bool)
          handler: handleActivation
        - event: Conversion(indexed address,indexed address,indexed address,uint256,uint256,int256)
          handler: handleConversionV2

      file: ./src/LiquidityPoolConverter.ts

  # SmartToken
  - kind: ethereum/contract
    name: SmartToken
    network: {{network}}
    source:
      abi: SmartToken
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      # TODO: Do there need to be entities here?
      entities:
        - OwnerUpdate
      abis:
        - name: SmartToken
          file: ./abis/SmartToken.json
        - name: LiquidityPoolV1Converter
          file: ./abis/LiquidityPoolV1Converter.json
        - name: LiquidityPoolV2Converter
          file: ./abis/LiquidityPoolV2Converter.json
        - name: LiquidityPoolV1ConverterProtocolFee
          file: ./abis/LiquidityPoolV1ConverterProtocolFee.json
      eventHandlers:
        - event: OwnerUpdate(indexed address,indexed address)
          handler: handleOwnerUpdate
      file: ./src/SmartToken.ts

  # LoanTokenLogicStandard
  - kind: ethereum/contract
    name: LoanTokenLogicStandard
    network: {{network}}
    source:
      # address: '{{LoanTokenLogicStandard.address}}'
      abi: LoanTokenLogicStandard
      # startBlock: {{LoanTokenLogicStandard.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities: 
        - Burn
        - FlashBorrow
        - Mint
      abis:
        - name: LoanTokenLogicStandard
          file: ./abis/LoanTokenLogicStandard.json
      eventHandlers:
        - event: Burn(indexed address,uint256,uint256,uint256)
          handler: handleBurn
        - event: Mint(indexed address,uint256,uint256,uint256)
          handler: handleMint
      file: ./src/LoanTokenLogicStandard.ts

  # LiquidityPoolV1ConverterProtocolFee
  - kind: ethereum/contract
    name: LiquidityPoolV1ConverterProtocolFee
    network: {{network}}
    source:
      # address: '{{LiquidityPoolV2Converter.address}}'
      abi: LiquidityPoolV1ConverterProtocolFee
      # startBlock: {{LiquidityPoolV2Converter.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Conversion
        - Token
        - SmartToken
        - PoolToken
      abis:
        - name: LiquidityPoolV1ConverterProtocolFee
          file: ./abis/LiquidityPoolV1ConverterProtocolFee.json
        - name: LiquidityPoolV1Converter
          file: ./abis/LiquidityPoolV1Converter.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: SmartToken
          file: ./abis/SmartToken.json
      eventHandlers:
        - event: LiquidityAdded(indexed address,indexed address,uint256,uint256,uint256)
          handler: handleLiquidityAdded
        - event: LiquidityRemoved(indexed address,indexed address,uint256,uint256,uint256)
          handler: handleLiquidityRemoved
        - event: Activation(indexed uint16,indexed address,indexed bool)
          handler: handleActivation
        - event: Conversion(indexed address,indexed address,indexed address,uint256,uint256,int256,int256)
          handler: handleConversionV1_2
        - event: WithdrawFees(indexed address,indexed address,address,uint256,uint256)
          handler: handleWithdrawFees
      file: ./src/LiquidityPoolConverter.ts
