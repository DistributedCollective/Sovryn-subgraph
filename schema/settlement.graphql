# Settlement contract scaffolded events (for Limit Orders)

type Deposit @entity {
  id: ID!
  to: Bytes! # address
  amount: BigDecimal! # uint256
  timestamp: Int!
  emittedBy: Bytes! #address
  transaction: Transaction!
}

type MarginOrderCanceled @entity {
  id: ID!
  hash: Bytes! # bytes32
  trader: Bytes! # address
  timestamp: Int!
  emittedBy: Bytes! #address
  transaction: Transaction!
}

type MarginOrderFilled @entity {
  id: ID!
  hash: Bytes! # bytes32
  trader: User! # address
  principal: BigDecimal! # uint256
  collateral: BigDecimal! # uint256
  leverageAmount: BigDecimal! # uint256
  loanTokenAddress: Bytes! # address
  loanTokenSent: BigDecimal! # uint256
  collateralTokenSent: BigDecimal! # uint256
  collateralTokenAddress: Bytes! # address
  filledPrice: BigDecimal! # uint256
  timestamp: Int!
  emittedBy: Bytes! #address
  transaction: Transaction!
}

type OrderCanceled @entity {
  id: ID!
  hash: Bytes! # bytes32
  maker: Bytes! # address
  timestamp: Int!
  emittedBy: Bytes! #address
  transaction: Transaction!
}

type OrderFilled @entity {
  id: ID!
  hash: Bytes! # bytes32
  maker: User! # address
  amountIn: BigDecimal! # uint256
  amountOut: BigDecimal! # uint256
  path: [String!]! # address[]
  filledPrice: BigDecimal! # uint256
  timestamp: Int!
  emittedBy: Bytes! #address
  transaction: Transaction!
}

type Withdrawal @entity {
  id: ID!
  receiver: Bytes! # address
  amount: BigDecimal! # uint256
  timestamp: Int!
  emittedBy: Bytes! #address
  transaction: Transaction!
}
