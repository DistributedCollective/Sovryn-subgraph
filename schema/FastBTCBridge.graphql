type BitcoinTransferBatchSending @entity {
  id: ID!
  bitcoinTxHash: Bytes! # bytes32
  transferBatchSize: Int! # uint8
  timestamp: Int!
  emittedBy: Bytes! #address
  transaction: Transaction!
}

type BitcoinTransferFeeChanged @entity {
  id: ID!
  baseFeeSatoshi: BigInt! # uint256
  dynamicFee: BigInt! # uint256
  timestamp: Int!
  emittedBy: Bytes! #address
  transaction: Transaction!
}

type BitcoinTransferStatusUpdated @entity {
  id: ID!
  transferId: Bytes! # bytes32
  newStatus: Int! # uint8
  timestamp: Int!
  emittedBy: Bytes! #address
  transaction: Transaction!
}

type Frozen @entity {
  id: ID!
  account: Bytes! # address
  timestamp: Int!
  emittedBy: Bytes! #address
  transaction: Transaction!
}

type NewBitcoinTransfer @entity {
  id: ID!
  transferId: Bytes! # bytes32
  btcAddress: String! # string
  nonce: BigInt! # uint256
  amountSatoshi: BigInt! # uint256
  feeSatoshi: BigInt! # uint256
  rskAddress: Bytes! # address
  timestamp: Int!
  emittedBy: Bytes! #address
  transaction: Transaction!
}

enum BitcoinTransferStatus {
  NOT_APPLICABLE # the transfer slot has not been initialized
  NEW # the transfer was initiated
  SENDING # the federators have approved this transfer as part of a transfer batch
  MINED # the transfer was confirmedly mined in Bitcoin blockchain
  REFUNDED # the transfer was refunded
  RECLAIMED # the transfer was reclaimed by the user
}

type BitcoinTransfer @entity {
  id: ID! # transferId
  btcAddress: String!
  nonce: Int!
  amountBTC: BigDecimal!
  feeBTC: BigDecimal!
  totalAmountBTC: BigDecimal!
  user: User! # user
  status: BitcoinTransferStatus!
  bitcoinTxHash: Bytes!
  createdAtTimestamp: Int!
  createdAtBlockNumber: Int!
  createdAtTx: Transaction!
  updatedAtTimestamp: Int!
  updatedAtBlockNumber: Int!
  updatedAtTx: Transaction!
}

type BidirectionalBridgeStat @entity {
  id: ID!
  user: User
  totalAmountBTCInitialized: BigDecimal!
  totalAmountBTCSending: BigDecimal!
  totalAmountBTCMined: BigDecimal!
  totalFeesBTC: BigDecimal!
  totalAmountBTCRefunded: BigDecimal!
  createdAtTx: Transaction!
  updatedAtTx: Transaction!
}
